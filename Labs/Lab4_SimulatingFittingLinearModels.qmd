---
title: "Lab 4: Linear models: Height and weight in the !Kung data"
author: "Jesse Brunner"
date: "`r Sys.Date()`"
format: 
  html:
    toc: true
    embed-resources: true
    code-fold: false
execute:
  include: true
---

# Goals for today

Chapter 4 spent a good deal of time working with the !Kung data in the `Howell1` data set.
```{r}
#| include: true
#| message: false

library(rethinking)
data("Howell1")
# rename for simplicity
df <- Howell1

head(df)
summary(df)
```

McElreath focused on the data of adults (`age >= 18`) and fitting a linear model to those data, but we will now use the entire data set. As a heads up, there are two lessons I think we need to learn, in addition to just getting practice fitting models to data and working with the posteriors. 

1.  Linear models are often useful phenomenological descriptions of the data, even when they are not not good mechanistic explanations. Moreover, we can often shoe-horn non-linear relationships into a linear form to good benefit.

2.  Reformulating a model or problem into a mathematically equivalent form can have the benefits of facilitating model-fitting (i.e., removing some problems with estimation) and simplifying the interpretation of parameters.

We'll get to both, but first, let us first fit a simple, linear model. 

# A simple model of weight by height
Let me propose this form and priors for a model of weight against height:

$$
\begin{align}
y_i & \sim \text{Normal}(\mu_i, \sigma) \\
\mu_i & = \alpha + \beta  x_i  \\
\alpha & \sim \text{Normal}(10,10) \\
\beta & \sim \text{Normal}(2,1) \\
\sigma & \sim \text{Exponential}(1)
\end{align}
$$
where $y_i$ is the weight of individual $i$ and $x_i$ is their height 

## Simulating possible relationships from a linear model: Prior checks

Your first task is to simulate and then plot 100 possible relationships (lines) from this model, given both the structure and the priors I have provided. We'll assume that the weights vary from a low of 5 kg to a high of 50 kg. Also, please do this before looking at the data; that would be cheating! ;-)

```{r}
# examine priors
```

Having done so, do you have any concerns with my priors? If so, please tell me how you are changing them.

```{r}

```

## Fitting a simple linear model with grid approximation 
Now that you are happy with the priors, please fit this model to the actual !Kung data using a grid approximation. Be sure to at least examine the posterior of the parameters.


```{r}
# Grid approximation

# calculate likelihood

# calculate posterior

# examine posterior

```

## Fitting a simple linear model with `quap()`

Let's admit it, grid approximation is clunky and slow. I, for one, keep finding that I haven't considered a wide enough range of parameters, but also that my grid is too coarse. Plus, it's quite easy to screw up the coding. The quadratic approximation that McElreath provided addresses some of these problems and gets us closer to using more modern, general-purpose tools. So let's repeat our above analysis using `quap()`. I've given you a skeleteon of the code this first time, but please refer back to the text for examples.

```{r}
#| eval: false
# quap version
m <- quap(
  alist(
   ## MODEL GOES HERE
  ), data=df
)

precis(m)
```


## Interpretting parameters
Examine the posterior of the key parameters (plots are helpful!) telling me what you think they tell you. Remember, you might night need to extract samples with the well-named `extract.samples()` function.

```{r}

```


If you have not yet examined the potential relationship between the parameters $a$ and $b$, do so here and tell me what you conclude. (That is, plot samples of `a` against samples of `b`... What should they look like? What do they look like?)

```{r}

```




## Revising our model structure

Given the correlation we observed, let me proposal a mathematically equivalent model structure: center your $x$-axis on the mean of those $x$ values. That is, let $hc_i =  h_i - \bar{h}$ and use $hc_i$ as your predictor variable. 
```{r}
df$hc <- df$height - mean(df$height)
summary(df$hc)
```

You may need to reconsider your priors. Do so and then fit the model with `quap()`. (You are welcome to repeat the fit with grid-approximation, too, if you like, but it's not necessary.)


```{r}
# examine priors

```

```{r}
# fit revised model

# examine posterior samples

```


How did this change your results? In particular, what happened to the relationship between the parameters $a$ and $b$? Why? Similarly, how did the interpretation of the parameter $a$ change?


## Comparing the model expectation to the data

So far we have not compared the model-expected relationship between weight and height and the actual relationship observed in the data. Let's do so now.

```{r}
# plot the observed data

# add lines representing posterior draws (maybe use the curve fxn)
```

How well does our model describe the general features of the data? 


## An allometric linear model

Suppose a colleague of yours who works on allometry glances at the practice problems just above. Your colleague exclaims, "That's silly. Every know that itâ€™s only the logarithm of body weight that scales with height!" Let's take your colleague's advice and see what happens. 

First, revise the model to accommodate a linear relationship between height and the log of weight.


$$
\begin{align}
\log(y_i) & \sim \text{Normal}(\mu_i, \sigma) \\
\mu_i & = \alpha + \beta  (x_i - \bar{x}) \\
\alpha & \sim \text{Normal}(50,10) \\
\beta & \sim \text{Normal}(0.25, 0.25) \\
\sigma & \sim \text{Exponential}(1)
\end{align}
$$


Second, be sure to examine the consequence of your priors, adjusting them as needed. 
```{r}

```


Third, fit the model to the data. Let's use `quap()` again. 


```{r}
# quap version

```

Fourth, interpret the posterior of the parameters and interpret them as well as you can.

```{r}

```

Fifth, graph the relationship between weight and height predicted by this new model, as well as the actual observations. 

```{r}
# linear on the log-x scale


# plot on the weight scale

```


Sixth, what can we conclude from this analysis?

